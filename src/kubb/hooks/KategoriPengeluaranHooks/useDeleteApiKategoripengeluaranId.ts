/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/config/axiosClient.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '@/config/axiosClient.ts'
import type {
  DeleteApiKategoripengeluaranIdMutationResponse,
  DeleteApiKategoripengeluaranIdPathParams,
} from '../../types/KategoriPengeluaranController/DeleteApiKategoripengeluaranId.ts'
import { useMutation } from '@tanstack/react-query'

export const deleteApiKategoripengeluaranIdMutationKey = () => [{ url: '/api/KategoriPengeluaran/{id}' }] as const

export type DeleteApiKategoripengeluaranIdMutationKey = ReturnType<typeof deleteApiKategoripengeluaranIdMutationKey>

/**
 * {@link /api/KategoriPengeluaran/:id}
 */
export async function deleteApiKategoripengeluaranId(
  id: DeleteApiKategoripengeluaranIdPathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<DeleteApiKategoripengeluaranIdMutationResponse, ResponseErrorConfig<Error>, unknown>({
    method: 'DELETE',
    url: `/api/KategoriPengeluaran/${id}`,
    ...requestConfig,
  })
  return res
}

/**
 * {@link /api/KategoriPengeluaran/:id}
 */
export function useDeleteApiKategoripengeluaranId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<DeleteApiKategoripengeluaranIdMutationResponse>,
      ResponseErrorConfig<Error>,
      { id: DeleteApiKategoripengeluaranIdPathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteApiKategoripengeluaranIdMutationKey()

  return useMutation<
    ResponseConfig<DeleteApiKategoripengeluaranIdMutationResponse>,
    ResponseErrorConfig<Error>,
    { id: DeleteApiKategoripengeluaranIdPathParams['id'] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return deleteApiKategoripengeluaranId(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
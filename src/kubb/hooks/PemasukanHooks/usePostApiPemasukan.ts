/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/config/axiosClient.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '@/config/axiosClient.ts'
import type { PostApiPemasukanMutationRequest, PostApiPemasukanMutationResponse } from '../../types/PemasukanController/PostApiPemasukan.ts'
import { useMutation } from '@tanstack/react-query'

export const postApiPemasukanMutationKey = () => [{ url: '/api/Pemasukan' }] as const

export type PostApiPemasukanMutationKey = ReturnType<typeof postApiPemasukanMutationKey>

/**
 * {@link /api/Pemasukan}
 */
export async function postApiPemasukan(
  data?: PostApiPemasukanMutationRequest,
  config: Partial<RequestConfig<PostApiPemasukanMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<PostApiPemasukanMutationResponse, ResponseErrorConfig<Error>, PostApiPemasukanMutationRequest>({
    method: 'POST',
    url: `/api/Pemasukan`,
    data,
    ...requestConfig,
    headers: { 'Content-Type': 'application/*+json', ...requestConfig.headers },
  })
  return res
}

/**
 * {@link /api/Pemasukan}
 */
export function usePostApiPemasukan<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<PostApiPemasukanMutationResponse>,
      ResponseErrorConfig<Error>,
      { data?: PostApiPemasukanMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PostApiPemasukanMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? postApiPemasukanMutationKey()

  return useMutation<ResponseConfig<PostApiPemasukanMutationResponse>, ResponseErrorConfig<Error>, { data?: PostApiPemasukanMutationRequest }, TContext>(
    {
      mutationFn: async ({ data }) => {
        return postApiPemasukan(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
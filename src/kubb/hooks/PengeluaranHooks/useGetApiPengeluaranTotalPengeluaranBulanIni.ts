/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/config/axiosClient.ts'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '@/config/axiosClient.ts'
import type { GetApiPengeluaranTotalPengeluaranBulanIniQueryResponse } from '../../types/PengeluaranController/GetApiPengeluaranTotalPengeluaranBulanIni.ts'
import { queryOptions, useQuery } from '@tanstack/react-query'

export const getApiPengeluaranTotalPengeluaranBulanIniQueryKey = () => [{ url: '/api/Pengeluaran/total-pengeluaran-bulan-ini' }] as const

export type GetApiPengeluaranTotalPengeluaranBulanIniQueryKey = ReturnType<typeof getApiPengeluaranTotalPengeluaranBulanIniQueryKey>

/**
 * {@link /api/Pengeluaran/total-pengeluaran-bulan-ini}
 */
export async function getApiPengeluaranTotalPengeluaranBulanIni(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<GetApiPengeluaranTotalPengeluaranBulanIniQueryResponse, ResponseErrorConfig<Error>, unknown>({
    method: 'GET',
    url: `/api/Pengeluaran/total-pengeluaran-bulan-ini`,
    ...requestConfig,
  })
  return res
}

export function getApiPengeluaranTotalPengeluaranBulanIniQueryOptions(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const queryKey = getApiPengeluaranTotalPengeluaranBulanIniQueryKey()
  return queryOptions<
    ResponseConfig<GetApiPengeluaranTotalPengeluaranBulanIniQueryResponse>,
    ResponseErrorConfig<Error>,
    ResponseConfig<GetApiPengeluaranTotalPengeluaranBulanIniQueryResponse>,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getApiPengeluaranTotalPengeluaranBulanIni(config)
    },
  })
}

/**
 * {@link /api/Pengeluaran/total-pengeluaran-bulan-ini}
 */
export function useGetApiPengeluaranTotalPengeluaranBulanIni<
  TData = ResponseConfig<GetApiPengeluaranTotalPengeluaranBulanIniQueryResponse>,
  TQueryData = ResponseConfig<GetApiPengeluaranTotalPengeluaranBulanIniQueryResponse>,
  TQueryKey extends QueryKey = GetApiPengeluaranTotalPengeluaranBulanIniQueryKey,
>(
  options: {
    query?: Partial<
      QueryObserverOptions<ResponseConfig<GetApiPengeluaranTotalPengeluaranBulanIniQueryResponse>, ResponseErrorConfig<Error>, TData, TQueryData, TQueryKey>
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? getApiPengeluaranTotalPengeluaranBulanIniQueryKey()

  const query = useQuery(
    {
      ...(getApiPengeluaranTotalPengeluaranBulanIniQueryOptions(config) as unknown as QueryObserverOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<QueryObserverOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseQueryResult<TData, ResponseErrorConfig<Error>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}
import{t,x as s,K as e,M as i,I as r,b as n,r as u,z as o,J as a}from"./index-DkQNp0KD.js";var h=class extends t{#t;#s=void 0;#e;#i;constructor(t,s){super(),this.#t=t,this.setOptions(s),this.bindMethods(),this.#r()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){const i=this.options;this.options=this.#t.defaultMutationOptions(t),s(this.options,i)||this.#t.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.#e,observer:this}),i?.mutationKey&&this.options.mutationKey&&e(i.mutationKey)!==e(this.options.mutationKey)?this.reset():"pending"===this.#e?.state.status&&this.#e.setOptions(this.options)}onUnsubscribe(){this.hasListeners()||this.#e?.removeObserver(this)}onMutationUpdate(t){this.#r(),this.#n(t)}getCurrentResult(){return this.#s}reset(){this.#e?.removeObserver(this),this.#e=void 0,this.#r(),this.#n()}mutate(t,s){return this.#i=s,this.#e?.removeObserver(this),this.#e=this.#t.getMutationCache().build(this.#t,this.options),this.#e.addObserver(this),this.#e.execute(t)}#r(){const t=this.#e?.state??i();this.#s={...t,isPending:"pending"===t.status,isSuccess:"success"===t.status,isError:"error"===t.status,isIdle:"idle"===t.status,mutate:this.mutate,reset:this.reset}}#n(t){r.batch(()=>{if(this.#i&&this.hasListeners()){const s=this.#s.variables,e=this.#s.context;"success"===t?.type?(this.#i.onSuccess?.(t.data,s,e),this.#i.onSettled?.(t.data,null,s,e)):"error"===t?.type&&(this.#i.onError?.(t.error,s,e),this.#i.onSettled?.(void 0,t.error,s,e))}this.listeners.forEach(t=>{t(this.#s)})})}};function c(t,s){const e=n(s),[i]=u.useState(()=>new h(e,t));u.useEffect(()=>{i.setOptions(t)},[i,t]);const c=u.useSyncExternalStore(u.useCallback(t=>i.subscribe(r.batchCalls(t)),[i]),()=>i.getCurrentResult(),()=>i.getCurrentResult()),l=u.useCallback((t,s)=>{i.mutate(t,s).catch(o)},[i]);if(c.error&&a(i.options.throwOnError,[c.error]))throw c.error;return{...c,mutate:l,mutateAsync:c.mutate}}export{c as u};
